---
import { db } from "@/lib/database";
import { playlist, track } from "@/lib/schema";
import { and, eq } from "drizzle-orm";
import Table from "./table.svelte";

interface Props {
	playlistId?: string;
}
const { playlistId } = Astro.props;

const user = Astro.locals.user;
if (!user) return new Response(null, { status: 401 });
const tracks = playlistId
	? (
			await db.query.playlist.findFirst({
				columns: {
					id: false,
					image: false,
					name: false,
					owner: false,
				},
				where: and(eq(playlist.id, playlistId), eq(playlist.owner, user.id)),
				with: {
					playlistToTracks: {
						columns: {
							playlistId: false,
							trackId: false,
						},
						with: {
							track: {
								columns: {
									blob: false,
									owner: false,
									size: false,
								},
							},
						},
					},
				},
			})
		)?.playlistToTracks.map(({ track }) => track)
	: await db.query.track.findMany({
			columns: {
				blob: false,
				owner: false,
				size: false,
			},
			where: eq(track.owner, user.id),
		});
if (!tracks) return new Response(null, { status: 500 });
const playlists = await db.query.playlist.findMany({
	where: eq(playlist.owner, user.id),
});

Astro.cookies.set(
	`tracks${playlistId ? `+${playlistId}` : ""}`,
	String(tracks.length),
	{
		path: "/",
		sameSite: "lax",
		httpOnly: true,
	}
);
---

<Table client:idle playlists={playlists} tracks={tracks} />
