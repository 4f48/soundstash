---
import { db } from "@/lib/database";
import { playlist } from "@/lib/schema";
import { eq } from "drizzle-orm";
import { Image } from "astro:assets";
import { Icon, MusicalNote } from "svelte-hero-icons";
import Create from "./create.svelte";

const user = Astro.locals.user;
if (!user) return new Response(null, { status: 401 });

const playlists = await db.query.playlist.findMany({
	columns: {
		owner: false,
	},
	where: eq(playlist.owner, user.id),
	with: {
		playlistToTracks: {
			columns: {
				playlistId: true,
			},
		},
	},
});

Astro.cookies.set("playlists", String(playlists.length), {
	path: "/",
	sameSite: "lax",
	httpOnly: true,
});
---

{
	playlists.length > 0 ? (
		playlists.map((playlist) => (
			<a
				class="hover:bg-bg1/50 flex h-15 w-full items-center gap-2 rounded-md px-1.5"
				draggable={false}
				href={`/playlist/${playlist.id}`}
			>
				{playlist.image ? (
					<Image
						alt=""
						class="row-span-2 size-12 shrink-0 rounded-sm"
						draggable={false}
						src={`/api/playlist/image?id=${playlist.id}`}
						height={36}
						width={36}
					/>
				) : (
					<div class="bg-bg1 flex size-12 items-center justify-center rounded-sm">
						<Icon class="text-bg5 size-8" src={MusicalNote} />
					</div>
				)}
				<div class="flex min-w-0 flex-1 flex-col">
					<span class="truncate">{playlist.name}</span>
					<span class="col-start-2 text-sm">
						Playlist &bull; {playlist.playlistToTracks.length} tracks
					</span>
				</div>
			</a>
		))
	) : (
		<Create client:visible n={playlists.length} />
	)
}
