import{E as w,c as f,b as S,t as h,v as T,S as E,m as I,w as $,B as z,x as D,T as N}from"./library.MDn1VkXg.js";import"./jsx-runtime.D_zvdyIk.js";import"./title.Zzc6FAcR.js";import"./index.DQLiH3RP.js";import"./createLucideIcon.DxLV4sYg.js";import"./button.Db3GhhwO.js";import"./card.gw5NK2rv.js";import"./dropdown-menu.COVBS5Vz.js";import"./index.CKCoq1tz.js";import"./index.B8Cg28y-.js";import"./index.C-Vi51-h.js";import"./index.CKz0Jdri.js";import"./index.CNoT2JK1.js";import"./dialog.CUSjS07t.js";import"./input.CNO_L4t5.js";import"./index.Bv7MI9QC.js";import"./client.BsjXsuL3.js";import"./loader-circle.BgR7_kSm.js";import"./trash-2.4YVattyp.js";const e={string:0,uint:1,uid:2,bool:3,binary:4,float:5},F={name:"dtd",container:{440786851:{name:"ebml",container:{17030:{name:"ebmlVersion",value:e.uint},17143:{name:"ebmlReadVersion",value:e.uint},17138:{name:"ebmlMaxIDWidth",value:e.uint},17139:{name:"ebmlMaxSizeWidth",value:e.uint},17026:{name:"docType",value:e.string},17031:{name:"docTypeVersion",value:e.uint},17029:{name:"docTypeReadVersion",value:e.uint}}},408125543:{name:"segment",container:{290298740:{name:"seekHead",container:{19899:{name:"seek",multiple:!0,container:{21419:{name:"id",value:e.binary},21420:{name:"position",value:e.uint}}}}},357149030:{name:"info",container:{29604:{name:"uid",value:e.uid},29572:{name:"filename",value:e.string},3979555:{name:"prevUID",value:e.uid},3965867:{name:"prevFilename",value:e.string},4110627:{name:"nextUID",value:e.uid},4096955:{name:"nextFilename",value:e.string},2807729:{name:"timecodeScale",value:e.uint},17545:{name:"duration",value:e.float},17505:{name:"dateUTC",value:e.uint},31657:{name:"title",value:e.string},19840:{name:"muxingApp",value:e.string},22337:{name:"writingApp",value:e.string}}},524531317:{name:"cluster",multiple:!0,container:{231:{name:"timecode",value:e.uid},22743:{name:"silentTracks ",multiple:!0},167:{name:"position",value:e.uid},171:{name:"prevSize",value:e.uid},160:{name:"blockGroup"},163:{name:"simpleBlock"}}},374648427:{name:"tracks",container:{174:{name:"entries",multiple:!0,container:{215:{name:"trackNumber",value:e.uint},29637:{name:"uid",value:e.uid},131:{name:"trackType",value:e.uint},185:{name:"flagEnabled",value:e.bool},136:{name:"flagDefault",value:e.bool},21930:{name:"flagForced",value:e.bool},156:{name:"flagLacing",value:e.bool},28135:{name:"minCache",value:e.uint},28136:{name:"maxCache",value:e.uint},2352003:{name:"defaultDuration",value:e.uint},2306383:{name:"timecodeScale",value:e.float},21358:{name:"name",value:e.string},2274716:{name:"language",value:e.string},134:{name:"codecID",value:e.string},25506:{name:"codecPrivate",value:e.binary},2459272:{name:"codecName",value:e.string},3839639:{name:"codecSettings",value:e.string},3883072:{name:"codecInfoUrl",value:e.string},2536e3:{name:"codecDownloadUrl",value:e.string},170:{name:"codecDecodeAll",value:e.bool},28587:{name:"trackOverlay",value:e.uint},224:{name:"video",container:{154:{name:"flagInterlaced",value:e.bool},21432:{name:"stereoMode",value:e.uint},176:{name:"pixelWidth",value:e.uint},186:{name:"pixelHeight",value:e.uint},21680:{name:"displayWidth",value:e.uint},21690:{name:"displayHeight",value:e.uint},21683:{name:"aspectRatioType",value:e.uint},3061028:{name:"colourSpace",value:e.uint},3126563:{name:"gammaValue",value:e.float}}},225:{name:"audio",container:{181:{name:"samplingFrequency",value:e.float},30901:{name:"outputSamplingFrequency",value:e.float},159:{name:"channels",value:e.uint},148:{name:"channels",value:e.uint},32123:{name:"channelPositions",value:e.binary},25188:{name:"bitDepth",value:e.uint}}},28032:{name:"contentEncodings",container:{25152:{name:"contentEncoding",container:{20529:{name:"order",value:e.uint},20530:{name:"scope",value:e.bool},20531:{name:"type",value:e.uint},20532:{name:"contentEncoding",container:{16980:{name:"contentCompAlgo",value:e.uint},16981:{name:"contentCompSettings",value:e.binary}}},20533:{name:"contentEncoding",container:{18401:{name:"contentEncAlgo",value:e.uint},18402:{name:"contentEncKeyID",value:e.binary},18403:{name:"contentSignature ",value:e.binary},18404:{name:"ContentSigKeyID  ",value:e.binary},18405:{name:"contentSigAlgo ",value:e.uint},18406:{name:"contentSigHashAlgo ",value:e.uint}}},25188:{name:"bitDepth",value:e.uint}}}}}}}}},475249515:{name:"cues",container:{187:{name:"cuePoint",container:{179:{name:"cueTime",value:e.uid},183:{name:"positions",container:{247:{name:"track",value:e.uint},241:{name:"clusterPosition",value:e.uint},21368:{name:"blockNumber",value:e.uint},234:{name:"codecState",value:e.uint},219:{name:"reference",container:{150:{name:"time",value:e.uint},151:{name:"cluster",value:e.uint},21343:{name:"number",value:e.uint},235:{name:"codecState",value:e.uint}}},240:{name:"relativePosition",value:e.uint}}}}}}},423732329:{name:"attachments",container:{24999:{name:"attachedFiles",multiple:!0,container:{18046:{name:"description",value:e.string},18030:{name:"name",value:e.string},18016:{name:"mimeType",value:e.string},18012:{name:"data",value:e.binary},18094:{name:"uid",value:e.uid}}}}},272869232:{name:"chapters",container:{17849:{name:"editionEntry",container:{182:{name:"chapterAtom",container:{29636:{name:"uid",value:e.uid},145:{name:"timeStart",value:e.uint},146:{name:"timeEnd",value:e.uid},152:{name:"hidden",value:e.bool},17816:{name:"enabled",value:e.uid},143:{name:"track",container:{137:{name:"trackNumber",value:e.uid},128:{name:"display",container:{133:{name:"string",value:e.string},17276:{name:"language ",value:e.string},17278:{name:"country ",value:e.string}}}}}}}}}}},307544935:{name:"tags",container:{29555:{name:"tag",multiple:!0,container:{25536:{name:"target",container:{25541:{name:"tagTrackUID",value:e.uid},25540:{name:"tagChapterUID",value:e.uint},25542:{name:"tagAttachmentUID",value:e.uid},25546:{name:"targetType",value:e.string},26826:{name:"targetTypeValue",value:e.uint},25545:{name:"tagEditionUID",value:e.uid}}},26568:{name:"simpleTags",multiple:!0,container:{17827:{name:"name",value:e.string},17543:{name:"string",value:e.string},17541:{name:"binary",value:e.binary},17530:{name:"language",value:e.string},17531:{name:"languageIETF",value:e.string},17540:{name:"default",value:e.bool}}}}}}}}}}},g=f("music-metadata:parser:ebml");class v extends I("EBML"){}const c={ReadNext:0,IgnoreElement:2,SkipSiblings:3,TerminateParsing:4,SkipElement:5};class U{constructor(a){this.padding=0,this.parserMap=new Map,this.ebmlMaxIDLength=4,this.ebmlMaxSizeLength=8,this.tokenizer=a,this.parserMap.set(e.uint,n=>this.readUint(n)),this.parserMap.set(e.string,n=>this.readString(n)),this.parserMap.set(e.binary,n=>this.readBuffer(n)),this.parserMap.set(e.uid,async n=>this.readBuffer(n)),this.parserMap.set(e.bool,n=>this.readFlag(n)),this.parserMap.set(e.float,n=>this.readFloat(n))}async iterate(a,n,m){return this.parseContainer(k(a),n,m)}async parseContainer(a,n,m){const o={};for(;this.tokenizer.position<n;){let i;const s=this.tokenizer.position;try{i=await this.readElement()}catch(r){if(r instanceof w)break;throw r}const t=a.container[i.id];if(t)switch(m.startNext(t)){case c.ReadNext:if(i.id,g(`Read element: name=${x(t)}{id=0x${i.id.toString(16)}, container=${!!t.container}} at position=${s}`),t.container){const l=await this.parseContainer(t,i.len>=0?this.tokenizer.position+i.len:-1,m);t.multiple?(o[t.name]||(o[t.name]=[]),o[t.name].push(l)):o[t.name]=l,await m.elementValue(t,l,s)}else{const l=this.parserMap.get(t.value);if(typeof l=="function"){const d=await l(i);o[t.name]=d,await m.elementValue(t,d,s)}}break;case c.SkipElement:g(`Go to next element: name=${x(t)}, element.id=0x${i.id}, container=${!!t.container} at position=${s}`);break;case c.IgnoreElement:g(`Ignore element: name=${x(t)}, element.id=0x${i.id}, container=${!!t.container} at position=${s}`),await this.tokenizer.ignore(i.len);break;case c.SkipSiblings:g(`Ignore remaining container, at: name=${x(t)}, element.id=0x${i.id}, container=${!!t.container} at position=${s}`),await this.tokenizer.ignore(n-this.tokenizer.position);break;case c.TerminateParsing:return g(`Terminate parsing at element: name=${x(t)}, element.id=0x${i.id}, container=${!!t.container} at position=${s}`),o}else switch(i.id){case 236:this.padding+=i.len,await this.tokenizer.ignore(i.len);break;default:g(`parseEbml: parent=${x(a)}, unknown child: id=${i.id.toString(16)} at position=${s}`),this.padding+=i.len,await this.tokenizer.ignore(i.len)}}return o}async readVintData(a){const n=await this.tokenizer.peekNumber(S);let m=128,o=1;for(;(n&m)===0;){if(o>a)throw new v("VINT value exceeding maximum size");++o,m>>=1}const i=new Uint8Array(o);return await this.tokenizer.readBuffer(i),i}async readElement(){const a=await this.readVintData(this.ebmlMaxIDLength),n=await this.readVintData(this.ebmlMaxSizeLength);return n[0]^=128>>n.length-1,{id:b(a,a.length),len:b(n,n.length)}}async readFloat(a){switch(a.len){case 0:return 0;case 4:return this.tokenizer.readNumber(T);case 8:return this.tokenizer.readNumber(h);case 10:return this.tokenizer.readNumber(h);default:throw new v(`Invalid IEEE-754 float length: ${a.len}`)}}async readFlag(a){return await this.readUint(a)===1}async readUint(a){const n=await this.readBuffer(a);return b(n,a.len)}async readString(a){return(await this.tokenizer.readToken(new E(a.len,"utf-8"))).replace(/\x00.*$/g,"")}async readBuffer(a){const n=new Uint8Array(a.len);return await this.tokenizer.readBuffer(n),n}}function b(u,a){return Number(M(u,a))}function M(u,a){const n=new Uint8Array(8),m=u.subarray(0,a);try{return n.set(m,8-a),$.get(n,0)}catch{return BigInt(-1)}}function k(u){return u.container&&Object.keys(u.container).map(a=>{const n=u.container[a];return n.id=Number.parseInt(a),n}).forEach(a=>{a.parent=u,k(a)}),u}function x(u){let a="";return u.parent&&u.parent.name!=="dtd"&&(a+=`${x(u.parent)}/`),a+u.name}const p=f("music-metadata:parser:matroska");class Z extends z{constructor(){super(...arguments),this.seekHeadOffset=0,this.flagUseIndexToSkipClusters=this.options.mkvUseIndex??!1}async parse(){const a=this.tokenizer.fileInfo.size??Number.MAX_SAFE_INTEGER,n=new U(this.tokenizer);p("Initializing DTD end MatroskaIterator"),await n.iterate(F,a,{startNext:m=>{switch(m.id){case 475249515:return p(`Skip element: name=${m.name}, id=0x${m.id.toString(16)}`),c.IgnoreElement;case 524531317:if(this.flagUseIndexToSkipClusters&&this.seekHead){const o=this.seekHead.seek.find(i=>i.position+this.seekHeadOffset>this.tokenizer.position);if(o){const i=o.position+this.seekHeadOffset-this.tokenizer.position;return p(`Use index to go to next position, ignoring ${i} bytes`),this.tokenizer.ignore(i),c.SkipElement}}return c.IgnoreElement;default:return c.ReadNext}},elementValue:async(m,o,i)=>{switch(p(`Received: name=${m.name}, value=${o}`),m.id){case 17026:this.metadata.setFormat("container",`EBML/${o}`);break;case 290298740:this.seekHead=o,this.seekHeadOffset=i;break;case 357149030:{const s=o,t=s.timecodeScale?s.timecodeScale:1e6;if(typeof s.duration=="number"){const r=s.duration*t/1e9;await this.addTag("segment:title",s.title),this.metadata.setFormat("duration",Number(r))}}break;case 374648427:{const s=o;if(s?.entries){s.entries.forEach(r=>{const l={codecName:r.codecID.replace("A_","").replace("V_",""),codecSettings:r.codecSettings,flagDefault:r.flagDefault,flagLacing:r.flagLacing,flagEnabled:r.flagEnabled,language:r.language,name:r.name,type:r.trackType,audio:r.audio,video:r.video};this.metadata.addStreamInfo(l)});const t=s.entries.filter(r=>r.trackType===N.audio).reduce((r,l)=>!r||l.flagDefault&&!r.flagDefault||l.trackNumber<r.trackNumber?l:r,null);t&&(this.metadata.setFormat("codec",t.codecID.replace("A_","")),this.metadata.setFormat("sampleRate",t.audio.samplingFrequency),this.metadata.setFormat("numberOfChannels",t.audio.channels))}}break;case 307544935:{const s=o;await Promise.all(s.tag.map(async t=>{const r=t.target,l=r?.targetTypeValue?D[r.targetTypeValue]:r?.targetType?r.targetType:"track";await Promise.all(t.simpleTags.map(async d=>{const y=d.string?d.string:d.binary;await this.addTag(`${l}:${d.name}`,y)}))}))}break;case 423732329:{const s=o;await Promise.all(s.attachedFiles.filter(t=>t.mimeType.startsWith("image/")).map(t=>this.addTag("picture",{data:t.data,format:t.mimeType,description:t.description,name:t.name})))}break}}})}async addTag(a,n){await this.metadata.addTag("matroska",a,n)}}export{Z as MatroskaParser};
